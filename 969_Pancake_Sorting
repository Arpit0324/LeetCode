Leetcode 969: Pancake Sorting
Detailed video explanation: https://youtu.be/AFtXLUn_TZg
==============================================

C++:
----
class Solution {
    void flip(vector<int>& A, int idx){
        for(int i = 0; i <= idx/2; ++i){
            int tmp = A[i];
            A[i] = A[idx-i];
            A[idx-i] = tmp;
        }
    }
public:
    vector<int> pancakeSort(vector<int>& A) {
        vector<int> result;
        for(int i = A.size()-1; i > 0; --i){
            for(int j = 1; j <= i; ++j){
                if(A[j] == i+1){
                    flip(A, j);
                    result.push_back(j+1);
                    break;
                }
            }
            flip(A, i);
            result.push_back(i+1);
        }
        return result;
    }
};



Java:
----
class Solution {
    private void flip(int[]A, int idx){
        for(int i = 0; i <= idx/2; ++i){
            int tmp = A[i];
            A[i] = A[idx-i];
            A[idx-i] = tmp;
        }
    }
    public List<Integer> pancakeSort(int[] A) {
        List<Integer> result = new ArrayList();
        for(int i = A.length-1; i > 0; --i){
            for(int j = 1; j <= i; ++j){
                if(A[j] == i+1){
                    flip(A, j);
                    result.add(j+1);
                    break;
                }
            }
            flip(A, i);
            result.add(i+1);
        }
        return result;
    }
}



Python3:
-------
class Solution:
    def pancakeSort(self, A: List[int]) -> List[int]:
        result = []
        def flip(idx):
            for i in range(0, idx//2+1):
                tmp = A[i]
                A[i] = A[idx-i]
                A[idx-i] = tmp
        for i in range(len(A)-1, 0, -1):
            for j in range(1, i+1):
                if A[j] == i+1:
                    flip(j)
                    result.append(j+1)
                    break
            flip(i)
            result.append(i+1)
        return result


