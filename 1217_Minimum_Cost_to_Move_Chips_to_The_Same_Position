Leetcode 1217: Minimum Cost to Move Chips to The Same Position
Detailed video explanation: https://youtu.be/BLYLGcYhcn8
==============================================================

C++:
----
class Solution {
public:
    int minCostToMoveChips(vector<int>& position) {
        int even = 0, odd = 0;
        for(int i: position){
            if(i%2) ++odd;
            else ++even;
        }
        return min(odd, even);
    }
};


Java:
-----
class Solution {
    public int minCostToMoveChips(int[] position) {
        int even = 0, odd = 0;
        for(int i: position){
            if(i%2 == 1) ++odd;
            else ++even;
        }
        return Math.min(odd, even);
    }
}



Python3:
--------
class Solution:
    def minCostToMoveChips(self, position: List[int]) -> int:
        even, odd = 0, 0
        for i in position:
            if i%2 == 1: odd += 1
            else: even += 1
        
        return min(odd, even)

