Leetcode 404: Sum of Left Leaves
Detailed video explanation: https://youtu.be/gPj3Fhekys8
==================================================


C++:
----
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    int sum = 0;
    void sumOfLeftLeaves(TreeNode* root, bool isLeft){
        if(isLeft && !root->left && !root->right) {
            sum += root->val;
            return;
        }
        if(root->left) sumOfLeftLeaves(root->left, true);
        if(root->right) sumOfLeftLeaves(root->right, false);
    }
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if(!root) return 0;
        sumOfLeftLeaves(root, false);
        return sum;
    }
};



Java:
-----
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    private int sum = 0;
    private void sumOfLeftLeaves(TreeNode root, boolean isLeft){
        if(isLeft && root.left == null && root.right == null) {
            sum += root.val;
            return;
        }
        if(root.left != null) sumOfLeftLeaves(root.left, true);
        if(root.right != null) sumOfLeftLeaves(root.right, false);
    }
    public int sumOfLeftLeaves(TreeNode root) {
        if(root == null) return 0;
        sumOfLeftLeaves(root, false);
        return sum;
    }
}



Python3:
--------
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sumOfLeftLeaves(self, root: TreeNode) -> int:
        self. sum = 0
        def sumOfLeftLeaves(root, isLeft):
            if isLeft and root.left == None and root.right == None:
                self.sum += root.val
                return
            if root.left != None: sumOfLeftLeaves(root.left, True)
            if root.right != None: sumOfLeftLeaves(root.right, False)
        
        if root == None: return 0
        sumOfLeftLeaves(root, False)
        return self.sum


