Leetcode 905: Sort Array By Parity
Detailed video Explanation: https://youtu.be/H19zVrrpn5E
========================================================


C++:
---
class Solution {
public:
    vector<int> sortArrayByParity(vector<int>& A) {
        int l = 0, r = A.size()-1;
        while(l < r){
            while(l < r && A[l] % 2 == 0) l++;
            while(l < r && A[r] % 2 == 1) r--;
            int tmp = A[l];
            A[l] = A[r];
            A[r] = tmp;
        }
        return A;
    }
};


Java:
-----
class Solution {
    public int[] sortArrayByParity(int[] A) {
        int l = 0, r = A.length-1;
        while(l < r){
            while(l < r && A[l] % 2 == 0) l++;
            while(l < r && A[r] % 2 == 1) r--;
            int tmp = A[l];
            A[l] = A[r];
            A[r] = tmp;
        }
        return A;
    }
}


Python3:
-------
class Solution:
    def sortArrayByParity(self, A: List[int]) -> List[int]:
        l, r = 0, len(A)-1
        while l < r:
            while l < r and A[l] % 2 == 0: l += 1
            while l < r and A[r] % 2 == 1: r -= 1
            A[l], A[r] = A[r], A[l]
        return A



