Leetcode 706: Design HashMap
Detailed video explanation: https://youtu.be/Xt4TuW31rtc
========================================================

C++:
----
class MyHashMap {
    vector<int> _v;
public:
    /** Initialize your data structure here. */
    MyHashMap():_v(1000001, -1) {
        
    }
    
    /** value will always be non-negative. */
    void put(int key, int value) {
        _v[key] = value;
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    int get(int key) {
        return _v[key];
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    void remove(int key) {
        _v[key] = -1;
    }
};

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap* obj = new MyHashMap();
 * obj->put(key,value);
 * int param_2 = obj->get(key);
 * obj->remove(key);
 */



Java:
-----
class MyHashMap {
    private int[] _v = new int[1000001];

    /** Initialize your data structure here. */
    public MyHashMap() {
        for(int i = 0; i < 1000001; ++i)
            _v[i] = -1;
    }
    
    /** value will always be non-negative. */
    public void put(int key, int value) {
        _v[key] = value;
    }
    
    /** Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key */
    public int get(int key) {
        return _v[key];
    }
    
    /** Removes the mapping of the specified value key if this map contains a mapping for the key */
    public void remove(int key) {
        _v[key] = -1;
    }
}

/**
 * Your MyHashMap object will be instantiated and called as such:
 * MyHashMap obj = new MyHashMap();
 * obj.put(key,value);
 * int param_2 = obj.get(key);
 * obj.remove(key);
 */



Python3:
--------
class MyHashMap:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self._v = [-1]*1000001
        

    def put(self, key: int, value: int) -> None:
        """
        value will always be non-negative.
        """
        self._v[key] = value
        

    def get(self, key: int) -> int:
        """
        Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key
        """
        return self._v[key]
        

    def remove(self, key: int) -> None:
        """
        Removes the mapping of the specified value key if this map contains a mapping for the key
        """
        self._v[key] = -1
        


# Your MyHashMap object will be instantiated and called as such:
# obj = MyHashMap()
# obj.put(key,value)
# param_2 = obj.get(key)
# obj.remove(key)

