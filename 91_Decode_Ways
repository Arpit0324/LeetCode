// LeetCode 91: Decode Ways
// Detailed Explanation is available here: https://youtu.be/o1i7JYWbwOE

// C++
class Solution {
public:
    int numDecodings(string s) {
        if(s.length() == 0 || s[0] == '0') return 0;
        if(s.length() == 1) return 1;
        
        int count1 = 1, count2 = 1;
        for(int i = 1; i < s.length(); ++i){
            int d = s[i] - '0';
            int dd = (s[i-1] - '0')*10 + d;
            int count = 0;
            if(d > 0) count += count2;
            if(dd >= 10 && dd <= 26) count += count1;
            count1 = count2;  // prev to prev
            count2 = count;  // count2 prev sol
        }
        return count2;
    }
};

// Java
class Solution {
    public int numDecodings(String s) {
        if(s.length() == 0 || s.charAt(0) == '0') return 0;
        if(s.length() == 1) return 1;
        
        int count1 = 1, count2 = 1;
        for(int i = 1; i < s.length(); ++i){
            int d = s.charAt(i) - '0';
            int dd = (s.charAt(i-1) - '0')*10 + d;
            int count = 0;
            if(d > 0) count += count2;
            if(dd >= 10 && dd <= 26) count += count1;
            count1 = count2;  // prev to prev
            count2 = count;  // count2 prev sol
        }
        return count2;
    }
}

# Python3
class Solution:
    def numDecodings(self, s: str) -> int:
        if len(s) == 0 or s[0] == '0': return 0;
        if len(s) == 1: return 1;
        
        count1, count2 = 1,1
        for i in range(1, len(s)):
            d = ord(s[i]) - ord('0')
            dd = (ord(s[i-1]) - ord('0'))*10 + d
            count = 0
            if d > 0: count += count2
            if dd >= 10 and dd <= 26: count += count1
            count1 = count2  # prev to prev
            count2 = count   # count2 prev sol
        
        return count2
        
 **** Please Like, Share and Subscribe 'Knowledge Center: https://www.youtube.com/c/KnowledgeCenter ****
